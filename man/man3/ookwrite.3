.TH OOKWRITE 3 2013-10-03 "" "Ook Programmer's Manual"
.SH NAME
ookwrite \- write a brick into an Ook file.
.SH SYNOPSIS
.nf
.B #include <ook.h>
.sp
.BI "void ookwrite(struct ookfile* " of ", const size_t " bid ", "
.BI "              const void* " data );
.fi
.SH DESCRIPTION
.LP
.BR ookwrite ()
writes a brick into the
.I of
ookfile from the memory pointer to by
.IR data .
The brick to read is described by the
.I bid
brick ID.  Brick IDs start at 0 and increment until
.BR ookbricks () - 1,
layed out in scanline order.  That is, brick ID 0 refers to the brick at
coordinate
.BR {0,0,0} ,
brick ID 1 refers to
.BR {1,0,0} ,
and so on, until the maximum number of bricks in X is reached.  At that point,
the next brick is
.BR {0,1,0} ,
and the count continues in this manner.  The 1-dimensional brick ID given to
.BR ookwrite ()
could be calculated from the 3-dimensional brick index by the equation:
.BR z*ROWS*COLS+y*COLS+x .
.LP
It is implementation-defined (see 
.BR io-interface(7) )
whether or not data are before an
.BR ookwrite ()
call returns.  Other processes may see inconsistent views of the file unless
they are serialized by an
.BR ookclose ().

.SH "RETURN VALUE"
.BR ookwrite ()
does not return anything.  However, should an error occur it will set
.IR errno .

.SH ERRORS
.TP
.B EINVAL
The given
.IR of
pointer does not point to a valid
.I struct\ ookfile
pointer, or
.I data
is not a valid pointer.

.SH "SEE ALSO"

.BR ookcreate (3),
.BR ookbrick (3),
.BR ookclose (3)
